name: Create Release on Push

on:
  push:
    branches: 
      - main
    paths:
      - 'setup.py'

jobs:
  check-version-changed:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version-change.outputs.version_changed }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Check if version changed
      id: version-change
      run: |
        VERSION_CHANGE=$(git diff $(git rev-parse HEAD~1) $(git rev-parse HEAD) -- setup.py | grep -e "^+.*version.*=" -e "^-.*version.*=" | wc -l)
        if [ "$VERSION_CHANGE" -eq 0 ]; then
          echo "Version not changed"
          echo "version_changed=false" >> $GITHUB_ENV
        else
          echo "Version changed"
          echo "version_changed=true" >> $GITHUB_ENV
        fi

  release:
    needs: check-version-changed
    if: ${{ env.version_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Extract Version from setup.py
      id: get_version
      run: |
        echo "VERSION=$(python setup.py --version)" >> $GITHUB_ENV
    - name: Create and Push Tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag v${{ env.VERSION }}
        git push origin v${{ env.VERSION }}
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: neuralnetlib v${{ env.VERSION }}
        tag_name: v${{ env.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
