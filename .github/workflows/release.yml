name: Create Release on Push

on:
  push:
    branches:
      - main
    paths:
      - 'setup.py'

jobs:
  check-version-changed:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version-change.outputs.version_changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Check if version changed
        id: version-change
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            VERSION_CHANGE=$(git diff HEAD^ HEAD -- setup.py | grep -e "^+.*version.*=" -e "^-.*version.*=" | wc -l)
            if [ "$VERSION_CHANGE" -eq 0 ]; then
              echo "Version not changed"
              echo "version_changed=false" >> $GITHUB_OUTPUT
            else
              echo "Version changed"
              echo "version_changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No previous commit to compare."
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  release:
    needs: check-version-changed
    if: needs.check-version-changed.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Extract Version from setup.py
        id: get_version
        run: |
          echo "VERSION=$(python setup.py --version)" >> $GITHUB_OUTPUT
      - name: Create and Push Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag v${{ steps.get_version.outputs.VERSION }}
          git push origin v${{ steps.get_version.outputs.VERSION }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: neuralnetlib v${{ steps.get_version.outputs.VERSION }}
          tag_name: v${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
